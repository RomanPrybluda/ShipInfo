name: Build, publish and deploy to MonsterASP.NET

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: windows-latest

    steps:
      - name: ‚è¨ Checkout repository
        uses: actions/checkout@v4

      - name: üõ† Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0

      - name: üì• Ensure NuGet.org is available
        run: dotnet nuget add source https://api.nuget.org/v3/index.json --name nuget.org

      - name: üì¶ Install dependencies
        run: dotnet restore

      - name: üßæ Replace appsettings.json values
        shell: pwsh
        run: |
          $appSettingsPath = Get-ChildItem -Path . -Recurse -Filter "appsettings.json" |
                              Select-Object -First 1 -ExpandProperty FullName
          if (-not $appSettingsPath) {
              Write-Host "‚ùå appsettings.json not found!"
              exit 1
          }
          $jsonContent = Get-Content $appSettingsPath -Raw | ConvertFrom-Json
          if ($jsonContent.PSObject.Properties.Name -contains "ConnectionStrings" -and
              $jsonContent.ConnectionStrings.PSObject.Properties.Name -contains "Default") {
              $jsonContent.ConnectionStrings.Default = "${{ secrets.SHIP_INFO_CONNECTION_STRING }}"
              $jsonContent | ConvertTo-Json -Depth 10 |
                Set-Content $appSettingsPath -Encoding UTF8
              Write-Host "‚úÖ Successfully updated ConnectionStrings.Default"
          } else {
              Write-Host "‚ö†Ô∏è ConnectionStrings.Default not found!"
              exit 1
          }

      - name: üõ† Build
        run: dotnet build --configuration Release --no-restore

      - name: üöÄ Publish ShipInfo.WebAPI
        run: dotnet publish ./ShipInfo.WebAPI/ShipInfo.WebAPI.csproj \
              --configuration Release \
              --output ./publish \
              --runtime win-x86

      - name: üìÇ List publish output
        run: dir ./publish

      - name: üóÑ Create local API folder in publish
        shell: pwsh
        run: |
          $apiPath = Join-Path $PWD 'publish\api'
          if (-not (Test-Path $apiPath)) {
            New-Item -Path $apiPath -ItemType Directory | Out-Null
            Write-Host "‚úÖ Created local folder: $apiPath"
          } else {
            Write-Host "‚ÑπÔ∏è Folder already exists: $apiPath"
          }

      - name: ‚úÖ Test with .NET
        run: dotnet test

      - name: üöÄ Deploy to MonsterASP.NET
        uses: rasmusbuchholdt/simply-web-deploy@2.1.0
        with:
          website-name: ${{ secrets.WEBSITE_NAME }}
          server-computer-name: ${{ secrets.SERVER_COMPUTER_NAME }}
          server-username: ${{ secrets.SERVER_USERNAME }}
          server-password: ${{ secrets.SERVER_PASSWORD }}
          source-path: ./publish
          target-path: /api/
