name: Build, publish, and deploy to MonsterASP.NET

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: windows-latest

    steps:
      # 1) Checkout repository
      - name: ⏬ Checkout repository
        uses: actions/checkout@v4

      # 2) Setup .NET 8
      - name: 🛠 Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      # 3) Ensure NuGet.org is available
      - name: 📥 Ensure NuGet.org is available
        run: dotnet nuget add source https://api.nuget.org/v3/index.json --name nuget.org

      # 4) Install dependencies
      - name: 📦 Install dependencies
        run: dotnet restore

      # 5) Replace appsettings.json values
      - name: 🧾 Replace appsettings.json values
        shell: pwsh
        run: |
          $appSettingsPath = Get-ChildItem -Path $env:GITHUB_WORKSPACE -Recurse -Filter "appsettings.json" | Select-Object -First 1 -ExpandProperty FullName
          if (-not $appSettingsPath) {
              Write-Error "❌ appsettings.json not found!"
              exit 1
          }
          $json = Get-Content $appSettingsPath -Raw | ConvertFrom-Json
          if ($json.ConnectionStrings.Default) {
              $json.ConnectionStrings.Default = "${{ secrets.SHIP_INFO_CONNECTION_STRING }}"
              $json | ConvertTo-Json -Depth 10 | Set-Content $appSettingsPath -Encoding UTF8
              Write-Host "✅ ConnectionStrings.Default updated"
          } else {
              Write-Error "⚠️ ConnectionStrings.Default not found!"
              exit 1
          }

      # 6) Build
      - name: 🛠 Build
        run: dotnet build --configuration Release --no-restore

      # 7) Publish ShipInfo.WebAPI
      - name: 🚀 Publish ShipInfo.WebAPI
        shell: pwsh
        run: |
          $publishDir = "${{ github.workspace }}\publish"
          if (Test-Path $publishDir) {
              Remove-Item -Path $publishDir -Recurse -Force
              Write-Host "🗑 Cleared existing publish folder: $publishDir"
          }
          dotnet publish ./ShipInfo.WebAPI/ShipInfo.WebAPI.csproj `
            --configuration Release `
            --output $publishDir `
            --no-restore `
            --no-build
          Write-Host "✅ Published to: $publishDir"

      # 8) Verify publish output
      - name: 📂 Verify publish output
        shell: pwsh
        run: |
          $publishDir = "${{ github.workspace }}\publish"
          if (-not (Test-Path $publishDir)) {
              Write-Error "❌ Publish folder not found at $publishDir!"
              exit 1
          }
          Write-Host "✅ Publish folder found at $publishDir"
          Get-ChildItem -Path $publishDir -Recurse | ForEach-Object { Write-Host "📄 Found: $($_.FullName)" }

      # 9) Move files to api subfolder
      - name: 🗄 Move files to api subfolder
        shell: pwsh
        run: |
          $publishDir = "${{ github.workflow }}\publish"
          $apiDir = "${{ github.workspace }}\publish\api"
          if (-not (Test-Path $apiDir)) {
              New-Item -ItemType Directory -Path $apiDir | Out-Null
              Write-Host "✅ Created: $apiDir"
          }
          Get-ChildItem -Path $publishDir | Where-Object { $_.FullName -ne $apiDir } | Move-Item -Destination $apiDir
          Write-Host "✅ Moved publish contents to $apiDir"
          Get-ChildItem -Path $apiDir -Recurse | ForEach-Object { Write-Host "📄 API folder content: $($_.FullName)" }

      # 10) Run tests
      - name: ✅ Test with .NET
        run: dotnet test --no-restore --no-build

      # 11) Deploy to MonsterASP.NET
      - name: 🚀 Deploy to MonsterASP.NET
        uses: rasmusbuchholdt/simply-web-deploy@2.1.0
        with:
          website-name: ${{ secrets.WEBSITE_NAME }}
          server-computer-name: ${{ secrets.SERVER_COMPUTER_NAME }}
          server-username: ${{ secrets.SERVER_USERNAME }}
          server-password: ${{ secrets.SERVER_PASSWORD }}
          source-path: ${{ github.workspace }}\publish\api
          target-path: wwwroot/api
